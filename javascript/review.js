const itemsPerPage = 5
let currentPage = { reviews: 1, questions: 1 }
let currentTab = 'reviews'
let filters = { rating: 'all', verified: false, answered: false }
let sortOrder = 'newest'

const reviews = [
	{
		id: 1,
		reviewer_name: '–ê–π–∂–∞–Ω –ö.',
		rating: 5,
		title: '–û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç',
		text: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞.',
		is_verified: true,
		created_at: '2025-05-01',
	},
	{
		id: 2,
		reviewer_name: '–ë–µ–∫–∑–∞—Ç –ú.',
		rating: 4,
		title: '–•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ',
		text: '–ü—Ä–æ–¥—É–∫—Ç —Ö–æ—Ä–æ—à–∏–π, –Ω–æ —É–ø–∞–∫–æ–≤–∫–∞ —Å–ª–∞–±–∞—è.',
		is_verified: true,
		created_at: '2025-05-02',
	},
	{
		id: 3,
		reviewer_name: '–î–∏–Ω–∞—Ä–∞ –°.',
		rating: 5,
		title: '–†–µ–∫–æ–º–µ–Ω–¥—É—é',
		text: '–ò—Å–ø–æ–ª—å–∑—É—é –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏, –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ.',
		is_verified: false,
		created_at: '2025-05-03',
	},
	{
		id: 4,
		reviewer_name: '–ï—Ä–ª–∞–Ω –¢.',
		rating: 3,
		title: '–ù–æ—Ä–º–∞–ª—å–Ω–æ',
		text: '–ö–∞—á–µ—Å—Ç–≤–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ, –¥–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–¥–µ—Ä–∂–∞–ª–∞—Å—å.',
		is_verified: true,
		created_at: '2025-05-04',
	},
	{
		id: 5,
		reviewer_name: '–ñ—É–ª–¥—ã–∑ –ê.',
		rating: 5,
		title: '–°—É–ø–µ—Ä',
		text: '–û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞, –±—É–¥—É –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ—â–µ.',
		is_verified: true,
		created_at: '2025-05-05',
	},
	{
		id: 6,
		reviewer_name: '–ö–∞–π—Ä–∞—Ç –ñ.',
		rating: 4,
		title: '–ü–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ',
		text: '–ü—Ä–æ–¥—É–∫—Ç —Ö–æ—Ä–æ—à–∏–π, –Ω–æ —Ü–µ–Ω–∞ –≤—ã—Å–æ–∫–∞—è.',
		is_verified: false,
		created_at: '2025-05-06',
	},
	{
		id: 7,
		reviewer_name: '–õ—è–∑–∑–∞—Ç –ë.',
		rating: 5,
		title: '–õ—É—á—à–∏–π –≤—ã–±–æ—Ä',
		text: '–ù–∞–¥–µ–∂–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞.',
		is_verified: true,
		created_at: '2025-05-07',
	},
	{
		id: 8,
		reviewer_name: '–ú–∞–¥–∏ –ù.',
		rating: 2,
		title: '–û–∂–∏–¥–∞–ª –±–æ–ª—å—à–µ–≥–æ',
		text: '–ö–∞—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥–Ω–µ–µ, –±—ã—Å—Ç—Ä–æ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª–∞—Å—å.',
		is_verified: false,
		created_at: '2025-05-08',
	},
	{
		id: 9,
		reviewer_name: '–ù—É—Ä–ª–∞–Ω –û.',
		rating: 5,
		title: '–í—Å–µ —Å—É–ø–µ—Ä',
		text: '–ü—Ä–æ–¥—É–∫—Ç –æ–ø—Ä–∞–≤–¥–∞–ª –æ–∂–∏–¥–∞–Ω–∏—è.',
		is_verified: true,
		created_at: '2025-05-09',
	},
	{
		id: 10,
		reviewer_name: '–û–ª—å–≥–∞ –ü.',
		rating: 4,
		title: '–•–æ—Ä–æ—à–æ',
		text: '–ö–∞—á–µ—Å—Ç–≤–æ —Ö–æ—Ä–æ—à–µ–µ, –Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è.',
		is_verified: true,
		created_at: '2025-05-10',
	},
	{
		id: 11,
		reviewer_name: '–†—É—Å—Ç–µ–º –ö.',
		rating: 5,
		title: '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ',
		text: '–û—Ç–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã.',
		is_verified: true,
		created_at: '2025-05-11',
	},
	{
		id: 12,
		reviewer_name: '–°–∞–ª—Ç–∞–Ω–∞—Ç –ï.',
		rating: 3,
		title: '–°—Ä–µ–¥–Ω–µ',
		text: '–ü—Ä–æ–¥—É–∫—Ç –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π, –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–≥–∞—è.',
		is_verified: false,
		created_at: '2025-05-12',
	},
	{
		id: 13,
		reviewer_name: '–¢–∏–º—É—Ä –í.',
		rating: 5,
		title: '–ò–¥–µ–∞–ª—å–Ω–æ',
		text: '–í—Å–µ –∫–∞–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏, –±—ã—Å—Ç—Ä–æ –¥–æ—Å—Ç–∞–≤–∏–ª–∏.',
		is_verified: true,
		created_at: '2025-05-13',
	},
	{
		id: 14,
		reviewer_name: '–£–ª–∂–∞–Ω –î.',
		rating: 4,
		title: '–ù–µ–ø–ª–æ—Ö–æ',
		text: '–ö–∞—á–µ—Å—Ç–≤–æ —Ö–æ—Ä–æ—à–µ–µ, –Ω–æ –¥–æ—Ä–æ–≥–æ–≤–∞—Ç–æ.',
		is_verified: true,
		created_at: '2025-05-14',
	},
	{
		id: 15,
		reviewer_name: '–§–∞—Ä–∏–∑–∞ –ú.',
		rating: 5,
		title: '–û—Ç–ª–∏—á–Ω–æ',
		text: '–ü—Ä–æ–¥—É–∫—Ç –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞.',
		is_verified: true,
		created_at: '2025-05-15',
	},
	{
		id: 16,
		reviewer_name: '–•–∞—Å–∞–Ω –®.',
		rating: 1,
		title: '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é',
		text: '–ö–∞—á–µ—Å—Ç–≤–æ –Ω–∏–∑–∫–æ–µ, –±—ã—Å—Ç—Ä–æ –∏—Å–ø–æ—Ä—Ç–∏–ª–∞—Å—å.',
		is_verified: false,
		created_at: '2025-05-16',
	},
	{
		id: 17,
		reviewer_name: '–®–æ–ª–ø–∞–Ω –ó.',
		rating: 5,
		title: '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ',
		text: '–û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞, –∑–∞–∫–∞–∂—É —Å–Ω–æ–≤–∞.',
		is_verified: true,
		created_at: '2025-05-17',
	},
	{
		id: 18,
		reviewer_name: '–≠–ª—å–¥–∞—Ä –ê.',
		rating: 4,
		title: '–•–æ—Ä–æ—à–∏–π —Ç–æ–≤–∞—Ä',
		text: '–ü—Ä–æ–¥—É–∫—Ç —Ö–æ—Ä–æ—à–∏–π, —É–ø–∞–∫–æ–≤–∫–∞ —Å–ª–∞–±–∞—è.',
		is_verified: true,
		created_at: '2025-05-18',
	},
	{
		id: 19,
		reviewer_name: '–Æ–ª–∏—è –õ.',
		rating: 5,
		title: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ',
		text: '–ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç–ª–∏—á–Ω–æ–µ, –¥–æ—Å—Ç–∞–≤–∫–∞ –±—ã—Å—Ç—Ä–∞—è.',
		is_verified: true,
		created_at: '2025-05-19',
	},
	{
		id: 20,
		reviewer_name: '–Ø—Ä–æ—Å–ª–∞–≤ –ò.',
		rating: 3,
		title: '–ú–æ–∂–Ω–æ –ª—É—á—à–µ',
		text: '–ü—Ä–æ–¥—É–∫—Ç —Å—Ä–µ–¥–Ω–∏–π, –æ–∂–∏–¥–∞–ª –±–æ–ª—å—à–µ–≥–æ.',
		is_verified: false,
		created_at: '2025-05-20',
	},
]

const questions = [
	{
		id: 1,
		user_name: '–ê–∑–∞–º–∞—Ç',
		title: '–ú–æ–∂–Ω–æ –ª–∏ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –≥–∞—Ä–∞–∂–µ?',
		text: '–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —Å–µ—Ä–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ –¥–ª—è –≥–∞—Ä–∞–∂–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è?',
		is_question: true,
		parent_id: null,
		created_at: '2025-05-01',
	},
	{
		id: 2,
		user_name: '–õ–∞–±–æ—Ä–∞–Ω—Ç',
		title: 'Re: –•—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥–∞—Ä–∞–∂–µ',
		text: '–•—Ä–∞–Ω–∏—Ç–µ –≤ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–º, —Å—É—Ö–æ–º –º–µ—Å—Ç–µ, –≤–¥–∞–ª–∏ –æ—Ç –≤–ª–∞–≥–∏.',
		is_question: false,
		parent_id: 1,
		created_at: '2025-05-02',
	},
	{
		id: 3,
		user_name: '–ì—É–ª—å–Ω–∞—Ä–∞',
		title: '–ö–∞–∫–æ–π —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏?',
		text: '–ö–∞–∫ –¥–æ–ª–≥–æ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∫–∏—Å–ª–æ—Ç—É?',
		is_question: true,
		parent_id: null,
		created_at: '2025-05-03',
	},
	{
		id: 4,
		user_name: '–õ–∞–±–æ—Ä–∞–Ω—Ç',
		title: 'Re: –°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏',
		text: '–ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.',
		is_question: false,
		parent_id: 3,
		created_at: '2025-05-04',
	},
	{
		id: 5,
		user_name: '–î–∞–º–∏—Ä',
		title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –¥–ª—è –¥–æ–º–∞?',
		text: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–º–∞ –¥–ª—è –º–µ–ª–∫–∏—Ö —Ä–∞–±–æ—Ç?',
		is_question: true,
		parent_id: null,
		created_at: '2025-05-05',
	},
	{
		id: 6,
		user_name: '–õ–∞–±–æ—Ä–∞–Ω—Ç',
		title: 'Re: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–æ–º–∞',
		text: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é, –≤ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–µ–º–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏.',
		is_question: false,
		parent_id: 5,
		created_at: '2025-05-06',
	},
	{
		id: 7,
		user_name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞',
		title: '–ö–∞–∫–æ–π –æ–±—ä–µ–º –≤—ã–±—Ä–∞—Ç—å?',
		text: '–ö–∞–∫–æ–π –æ–±—ä–µ–º –ª—É—á—à–µ –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –Ω—É–∂–¥?',
		is_question: true,
		parent_id: null,
		created_at: '2025-05-07',
	},
	{
		id: 8,
		user_name: '–õ–∞–±–æ—Ä–∞–Ω—Ç',
		title: 'Re: –í—ã–±–æ—Ä –æ–±—ä–µ–º–∞',
		text: '–î–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º 1‚Äì5 –ª–∏—Ç—Ä–æ–≤.',
		is_question: false,
		parent_id: 7,
		created_at: '2025-05-08',
	},
	{
		id: 9,
		user_name: '–ñ–∞–Ω–∞—Ä',
		title: '–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π',
		text: '–ü–æ—á–µ–º—É –¥–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–¥–µ—Ä–∂–∞–ª–∞—Å—å?',
		is_question: true,
		parent_id: null,
		created_at: '2025-05-09',
	},
	{
		id: 10,
		user_name: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
		title: 'Re: –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π',
		text: '–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –∑–∞–¥–µ—Ä–∂–∫—É, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.',
		is_question: false,
		parent_id: 9,
		created_at: '2025-05-10',
	},
]

function filterAndSortData(type, page) {
	let data = type === 'reviews' ? [...reviews] : [...questions]
	if (type === 'reviews') {
		if (filters.rating !== 'all') {
			data = data.filter(item => item.rating === parseInt(filters.rating))
		}
		if (filters.verified) {
			data = data.filter(item => item.is_verified)
		}
	} else if (type === 'questions') {
		if (filters.answered) {
			const answeredIds = questions
				.filter(q => !q.is_question)
				.map(q => q.parent_id)
			data = data.filter(
				item => item.is_question && answeredIds.includes(item.id)
			)
		}
		data = data.filter(item => item.is_question)
	}

	if (sortOrder === 'newest') {
		data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
	} else if (sortOrder === 'oldest') {
		data.sort((a, b) => new Date(a.created_at) - new Date(b.created_at))
	} else if (sortOrder === 'highest') {
		data.sort((a, b) => b.rating - a.rating)
	} else if (sortOrder === 'lowest') {
		data.sort((a, b) => a.rating - b.rating)
	}

	const start = (page - 1) * itemsPerPage
	const end = start + itemsPerPage
	const paginatedData = data.slice(start, end)
	const totalPages = Math.ceil(data.length / itemsPerPage)

	return { data: paginatedData, totalPages }
}

function renderList(type, items) {
	const list = document.getElementById(
		type === 'reviews' ? 'reviews-list' : 'questions-list'
	)
	if (!list) {
		console.error(`Element with ID ${type}-list not found`)
		return
	}
	list.innerHTML = ''
	items.forEach(item => {
		const card = document.createElement('div')
		card.className = 'review-card'
		if (type === 'reviews') {
			card.innerHTML = `
        <p class="reviewer-name">
          <img src="icons/kazakhstan.png" alt="KZ">
          <strong>${item.reviewer_name}</strong> ‚Äì ${
				item.is_verified ? '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å' : '–ì–æ—Å—Ç—å'
			}
        </p>
        <p class="stars">${'‚òÖ'.repeat(item.rating)}${'‚òÜ'.repeat(
				5 - item.rating
			)}</p>
        <p class="review-title"><strong>${item.title}</strong></p>
        <p class="review-text">${item.text}</p>
      `
		} else {
			card.innerHTML = `
        <p class="reviewer-name">
          <img src="icons/kazakhstan.png" alt="KZ">
          ${item.is_question ? '‚ùì' : 'üí¨'} <strong>${
				item.user_name
			}</strong> ‚Äì ${item.is_question ? '–°–ø—Ä–æ—Å–∏–ª' : '–û—Ç–≤–µ—Ç–∏–ª'}
        </p>
        <p class="review-title"><strong>${item.title}</strong></p>
        <p class="review-text">${item.text}</p>
      `
		}
		list.appendChild(card)
	})
}

function renderPagination(type, totalPages, page) {
	const pagination = document.getElementById(
		type === 'reviews' ? 'reviews-pagination' : 'questions-pagination'
	)
	if (!pagination) {
		console.error(`Element with ID ${type}-pagination not found`)
		return
	}
	pagination.innerHTML = ''
	for (let i = 1; i <= totalPages; i++) {
		const button = document.createElement('button')
		button.textContent = i
		button.className = i === page ? 'active' : ''
		button.addEventListener('click', () => {
			currentPage[type] = i
			loadData(type)
		})
		pagination.appendChild(button)
	}
}

function loadData(type) {
	const { data, totalPages } = filterAndSortData(type, currentPage[type])
	renderList(type, data)
	renderPagination(type, totalPages, currentPage[type])
}

function switchTab(tabName) {
	document
		.querySelectorAll('.tab-button')
		.forEach(btn => btn.classList.remove('active'))
	document
		.querySelectorAll('.tab-content')
		.forEach(tab => tab.classList.remove('active'))
	document
		.querySelectorAll(`.tab-button[data-tab="${tabName}"]`)
		.forEach(btn => btn.classList.add('active'))
	document.getElementById(`${tabName}-tab`).classList.add('active')
	currentTab = tabName
	currentPage[currentTab] = 1
	loadData(currentTab)

	const reviewSection = document.getElementById('review-section')
	if (reviewSection) {
		reviewSection.scrollIntoView({ behavior: 'smooth', block: 'start' })
	} else {
		console.error('Element with ID review-section not found')
	}
}

document.addEventListener('DOMContentLoaded', () => {
	loadData('reviews')
	document.querySelectorAll('.tab-button').forEach(button => {
		button.addEventListener('click', () => {
			const tabName = button.dataset.tab
			switchTab(tabName)
		})
	})

	const ratingFilter = document.getElementById('rating-filter')
	if (ratingFilter) {
		ratingFilter.addEventListener('change', e => {
			filters.rating = e.target.value
			currentPage[currentTab] = 1
			loadData(currentTab)
		})
	} else {
		console.error('Element with ID rating-filter not found')
	}

	const verifiedFilter = document.getElementById('verified-filter')
	if (verifiedFilter) {
		verifiedFilter.addEventListener('change', e => {
			filters.verified = e.target.checked
			currentPage[currentTab] = 1
			loadData(currentTab)
		})
	} else {
		console.error('Element with ID verified-filter not found')
	}

	const answeredFilter = document.getElementById('answered-filter')
	if (answeredFilter) {
		answeredFilter.addEventListener('change', e => {
			filters.answered = e.target.checked
			currentPage[currentTab] = 1
			loadData(currentTab)
		})
	} else {
		console.error('Element with ID answered-filter not found')
	}

	const sortOrderSelect = document.getElementById('sort-order')
	if (sortOrderSelect) {
		sortOrderSelect.addEventListener('change', e => {
			sortOrder = e.target.value
			currentPage[currentTab] = 1
			loadData(currentTab)
		})
	} else {
		console.error('Element with ID sort-order not found')
	}
})
